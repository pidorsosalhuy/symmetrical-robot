name: Serveo Tunnel with Smart Workspace

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  serveo:
    runs-on: ubuntu-latest
    timeout-minutes: 355

    steps:
    - name: Checkout with full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Важно! Качаем всю историю коммитов

    - name: Restore workspace
      run: |
        echo "🔍 Looking for workspace parts..."
        if ls workspace_part_* 1> /dev/null 2>&1; then
          echo "✅ Found workspace parts, restoring..."
          cat workspace_part_* | tar -xzf - -C /
          echo "✅ Workspace restored to /home/none/"
        else
          echo "🆕 No workspace parts found, starting fresh"
        fi

    - name: Setup system and user
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-server openssh-client pwgen
        
        # Создаем пользователя none если не существует
        if ! id "none" &>/dev/null; then
          sudo useradd -m -s /bin/bash none
          echo "none:h4ck3d" | sudo chpasswd
          sudo usermod -aG sudo none
          echo "none ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/none
        fi
        
        # Меняем hostname
        sudo hostnamectl set-hostname gitserver
        
        # Настраиваем SSH
        sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
        sudo sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
        echo "AllowUsers none" | sudo tee -a /etc/ssh/sshd_config
        
        # Чиним права
        sudo chown -R none:none /home/none/
        sudo service ssh restart

    - name: Start Serveo tunnel with auto-save
      run: |
        # Запускаем Serveo в фоне
        ssh -o StrictHostKeyChecking=no -R github-runner:22:localhost:22 serveo.net &
        SERVEOPID=$!
        echo "🔄 Serveo started with PID: $SERVEOPID"
        
        # Ждем 5 часов 50 минут перед сохранением
        sleep 21000
        
        echo "💾 Starting workspace save..."
        
        # Создаем бэкап домашней директории
        sudo tar -czf /tmp/workspace_backup.tar.gz -C /home/none/ .
        
        # Определяем размер и разбиваем на части
        SIZE=$(stat -c%s /tmp/workspace_backup.tar.gz)
        PART_SIZE=50000000  # 50MB части для надежности
        NEEDED_PARTS=$(( (SIZE + PART_SIZE - 1) / PART_SIZE ))
        
        if [ $NEEDED_PARTS -lt 1 ]; then
          NEEDED_PARTS=1
        fi
        if [ $NEEDED_PARTS -gt 10 ]; then
          NEEDED_PARTS=10
        fi
        
        echo "📦 Splitting ${SIZE} bytes into ${NEEDED_PARTS} parts"
        
        # Удаляем старые части и создаем новые
        rm -f workspace_part_*
        split -b ${PART_SIZE} /tmp/workspace_backup.tar.gz workspace_part_
        
        # Коммитим и пушим
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add workspace_part_*
        git status
        git commit -m "workspace: auto-save $(date +%Y%m%d-%H%M%S)" || echo "🤷 No changes to commit"
        git push origin HEAD
        
        echo "✅ Workspace saved in ${NEEDED_PARTS} parts"
        
        # Даем время на пуш и убиваем процесс
        sleep 30
        kill $SERVEOPID 2>/dev/null || true
        echo "🔄 Serveo stopped, ready for restart"

    - name: Force new workflow
      if: always()
      run: |
        echo "🚀 Triggering new workflow..."
        sleep 5
