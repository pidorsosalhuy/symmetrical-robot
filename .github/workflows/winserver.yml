name: VNC via Cloudflare Tunnel

on: [workflow_dispatch]

jobs:
  vnc:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Install VNC
      run: |
        Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.81/tightvnc-2.8.81-gpl-setup-64bit.msi" -OutFile "tightvnc.msi"
        Start-Process msiexec -ArgumentList "/i tightvnc.msi /quiet /norestart" -Wait
        Start-Sleep -Seconds 10
        $vncPath = "C:\Program Files\TightVNC\tvnserver.exe"
        & "$vncPath" -service -start
        Start-Sleep -Seconds 5
        & "$vncPath" -controlservice -password Pass123!

    - name: Install Cloudflared
      run: |
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"

    - name: Create and run tunnel
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        # Создаем туннель с уникальным именем
        $tunnelName = "vnc-${{ github.run_id }}-${{ github.run_attempt }}"
        
        Write-Host "Starting Cloudflare tunnel: $tunnelName"
        
        # Запускаем туннель (cloudflared автоматически использует env переменную CLOUDFLARE_API_TOKEN)
        .\cloudflared.exe tunnel --url tcp://localhost:5900 --name $tunnelName
